// Author: Hugo W.L. ter Doest
// Last edit: 3-7-2014
// Based on: http://www.scientificpsychic.com/grammar/enggram1.html
// Formalism: Context-free Grammar

Z -> ENGLISH_SENTENCE

// <English Sentence> = <Simple Sentence> | <Compound Sentence>
ENGLISH_SENTENCE -> SIMPLE_SENTENCE
ENGLISH_SENTENCE -> COMPOUND_SENTENCE

// <Simple Sentence> = <Declarative Sentence> | <Interrogative Sentence> | 
//                     <Imperative Sentence> | <Conditional Sentence>
SIMPLE_SENTENCE -> DECLARATIVE_SENTENCE
SIMPLE_SENTENCE -> INTERROGATIVE_SENTENCE
SIMPLE_SENTENCE -> IMPERATIVE_SENTENCE
SIMPLE_SENTENCE -> CONDITIONAL_SENTENCE
SIMPLE_SENTENCE -> NOUN_PHASE
SIMPLE_SENTENCE -> PREPOSITIONAL_PHASE

// <Compound Sentence> = <Simple Sentence> <conjunction> <Simple Sentence> |
//                       "Either" <Declarative Sentence> "or" <Declarative Sentence> |
//                       "Either" <Imperative Sentence> "or" <Imperative Sentence>
COMPOUND_SENTENCE -> SIMPLE_SENTENCE CC SIMPLE_SENTENCE
COMPOUND_SENTENCE -> EITHER DECLARATIVE_SENTENCE OR DECLARATIVE_SENTENCE
COMPOUND_SENTENCE -> EITHER IMPERATIVE_SENTENCE OR IMPERATIVE_SENTENCE

// <Declarative Sentence> = <subject> <predicate>
DECLARATIVE_SENTENCE -> SUBJECT PREDICATE

// <Interrogative Sentence> = <Declarative Sentence>"?"
INTERROGATIVE_SENTENCE -> SUBJECT PREDICATE QUESTION_MARK

// <Interrogative Sentence> = "Who" <predicate>"?"
// Where the verb of the predicate is in 3rd person form.
INTERROGATIVE_SENTENCE -> WHO PREDICATE QUESTION_MARK

// ("What" |"Which") [<adverb>* <adjective>] <noun> <predicate>"?"
INTERROGATIVE_SENTENCE -> WHAT NOUN PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ADJECTIVES NOUN PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ADVERBS ADJECTIVES NOUN PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ADJECTIVES NOUN PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ADVERBS ADJECTIVES NOUN PREDICATE QUESTION_MARK

// <Interrogative Sentence> =["What" |"When" |"Where" |"Who" |"To whom" |"Why"]
//   ("do" |"does" |"don't" |"doesn't" |"did" |"didn't") <subject> <predicate>"?"
// The verb of the predicate must be infinitive (Vinf).
INTERROGATIVE_SENTENCE -> DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DO SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DOES SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DONT SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DOESNT SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DID SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM DIDNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY DIDNT SUBJECT PREDICATE QUESTION_MARK

// <Interrogative Sentence> = "Which" [<noun phrase>] 
// ("do" |"does" |"don't" |"doesn't" |"did" |"didn't") <subject> <predicate>"?"
// The verb of the predicate must be infinitive (Vinf).
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DO SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DOES SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DOESNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DID SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH NOUN_PHRASE DIDNT SUBJECT PREDICATE QUESTION_MARK

// <Interrogative Sentence> = ["What" |"Which" |"When" |"Where" |"Who" |"To whom" |"Why"]
//             ("will" |"won't") <subject> <predicate>"?" 
// The verb in the predicate must must follow these patterns:
//       "have" <Vpastp>
//       "have" "been" <Ving>
//       "be" <Ving>
//       <Vinf>
INTERROGATIVE_SENTENCE -> WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM WILL SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY WILL SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM WONT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY WONT SUBJECT PREDICATE QUESTION_MARK

// <Interrogative Sentence> = 
//             ["What" |"Which" |"When" |"Where" |"Who" |"To whom" | "Why"]
//             ("has" |"have" |"hasn't" |"haven't")
//             <subject> <predicate>"?"
// Verb in the predicate must be past participle <Vpastp>
INTERROGATIVE_SENTENCE -> HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY HAS SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO HAVE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM HAVE HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY HAVE SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO HASNT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM HASNT HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY HASNT SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO HAVENT SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM HAVENT HAS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY HAVENT SUBJECT PREDICATE QUESTION_MARK

// <Interrogative Sentence> = 
//   ["What" |"Which" |"When" |"Where" |"Who" |"To whom" | "Why"]
//             ("are" |"is" |"was" |"were" |
//             "aren't" |"isn't" |"wasn't" |"weren't")
//             <subject>
//             [<adverb>* <adjective> | <prep phr>* | <predicate>]"?"
// Verb in the predicate must be present participle <Ving> or past participle <Vpastp>             
INTERROGATIVE_SENTENCE -> ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM ARE SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY ARE SUBJECT QUESTION_MARK

INTERROGATIVE_SENTENCE -> ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM ARE SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY ARE SUBJECT ADV_ADJ QUESTION_MARK

INTERROGATIVE_SENTENCE -> ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY ARE SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK

INTERROGATIVE_SENTENCE -> ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM ARE SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY ARE SUBJECT PREDICATE QUESTION_MARK

INTERROGATIVE_SENTENCE -> IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM IS SUBJECT QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY IS SUBJECT QUESTION_MARK

INTERROGATIVE_SENTENCE -> IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM IS SUBJECT ADV_ADJ QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY IS SUBJECT ADV_ADJ QUESTION_MARK

INTERROGATIVE_SENTENCE -> IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY IS SUBJECT PREPOSITIONAL_PHRASES QUESTION_MARK

INTERROGATIVE_SENTENCE -> IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHAT IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHICH IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHEN IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHERE IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHO IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> TO WHOM IS SUBJECT PREDICATE QUESTION_MARK
INTERROGATIVE_SENTENCE -> WHY IS SUBJECT PREDICATE QUESTION_MARK


// <subject> = <simple subject> | <compound subject>
SUBJECT -> SIMPLE_SUBJECT
SUBJECT -> COMPOUND_SUBJECT

// <simple subject> = <noun phrase> | <nominative personal pronoun>
SIMPLE_SUBJECT -> NOUN_PHRASE
SIMPLE_SUBJECT -> PRP

// <compound subject> = <simple subject> ("and" | "or") <simple subject>
COMPOUND_SUBJECT -> SIMPLE_SUBJECT CC SIMPLE_SUBJECT

// <compound subject> = "Either" <simple subject> "or" <simple subject>
COMPOUND_SUBJECT -> EITHER SIMPLE_SUBJECT OR SIMPLE_SUBJECT

// <compound subject> = "Neither" <simple subject> "nor" <simple subject> 
COMPOUND_SUBJECT -> NEITHER SIMPLE_SUBJECT NOR SIMPLE_SUBJECT

// <noun phrase> = "the" <specific proper noun>
NOUN_PHRASE -> DT NNP
NOUN_PHRASE -> DT NNPS

// <noun phrase> = <proper noun>
NOUN_PHRASE -> NNP
NOUN_PHRASE -> NNPS

// <noun phrase> = <non-personal pronoun>

// <noun phrase> = <article> [<adverb>* <adjective>] <noun>
// Added rules for optional article
NOUN_PHRASE -> NOUN
NOUN_PHRASE -> ADJECTIVES NOUN
NOUN_PHRASE -> ADVERBS ADJECTIVES NOUN
NOUN_PHRASE -> DT NOUN
NOUN_PHRASE -> DT ADJECTIVES NOUN
NOUN_PHRASE -> DT ADVERBS ADJECTIVES NOUN

// <noun phrase> = [<adverb>* <adjective>] <noun-plural>
NOUN_PHRASE -> NOUN_PLURAL
NOUN_PHRASE -> ADJECTIVES NOUN_PLURAL
NOUN_PHRASE -> ADVERBS ADJECTIVES NOUN_PLURAL

// <noun phrase> = <proper noun-possessive> [<adverb>* <adjective>] <noun>
NOUN_PHRASE -> NNP POS ADJECTIVES NOUN
NOUN_PHRASE -> NNP POS ADVERBS ADJECTIVES NOUN

// <noun phrase> = <personal possessive adjective> [<adverb>* <adjective>] <noun>
NOUN_PHRASE -> PRP$ ADJECTIVES NOUN
NOUN_PHRASE -> PRP$ ADVERBS ADJECTIVES NOUN

// <article> <common noun-possessive> [<adverb>* <adjective>] <noun> 
NOUN_PHRASE -> DT NOUN POS ADJECTIVES NOUN
NOUN_PHRASE -> DT NOUN POS ADVERBS ADJECTIVES NOUN

// One or more adverbs
ADVERBS -> RB ADVERBS
ADVERBS -> RB

ADJECTIVES -> ADJECTIVE CC ADJECTIVES
ADJECTIVES -> JJ ADJECTIVES
ADJECTIVES -> JJ

// <noun> = <noun> [<prep phr>*]
NOUN -> NN
NOUN -> NN PREPOSITIONAL_PHRASES
NOUN -> NNS
NOUN -> NNS PREPOSITIONAL_PHRASES

// <predicate> = (<verb> | <verb phrase>) <complement>
PREDICATE -> VERB
PREDICATE -> VERB_PHRASE
PREDICATE -> VERB COMPLEMENT
PREDICATE -> VERB_PHRASE COMPLEMENT

// <complement> = [[<indirect object>] <object>]
COMPLEMENT -> OBJECT
COMPLEMENT -> INDIRECT_OBJECT OBJECT

// <complement> = [<adverb>* <adjective>]
COMPLEMENT -> ADJECTIVES
COMPLEMENT -> ADVERBS ADJECTIVES

// <complement> = [<prep phr>*] |
COMPLEMENT -> PREPOSITIONAL PHRASE

// <complement> = ["to" <Vinf> [<object>]]
COMPLEMENT -> TO VB
COMPLEMENT -> TO VB OBJECT

// <complement> = [<Ving>] 
COMPLEMENT -> VBG

// <indirect object> = <object> = <simple object> | <compound object> 
INDIRECT_OBJECT -> OBJECT
OBJECT -> SIMPLE_OBJECT
OBJECT -> COMPOUND_OBJECT

// <compound object> = <simple object> ("and" | "or") <simple object> 
COMPOUND_OBJECT ->  SIMPLE_OBJECT CC COMPOUND_OBJECT

// <simple object> = <noun phrase> | <objective personal pronoun>
SIMPLE_OBJECT -> NOUN_PHRASE
SIMPLE_OBJECT -> PRP

// <prep phr> = <preposition> <object>
PREPOSITIONAL_PHRASES -> IN OBJECT
PREPOSITIONAL_PHRASES -> PREPOSITIONAL_PHRASE PREPOSITIONAL_PHRASES

// Verb phrase
//<verb> = <V1s> |<V2s> |<V3s> |<V1p> |<V2p> |<V3p> |<Vpast> |<linking verb>
VERB -> VBP
VERB -> VBZ
VERB -> VBD
VERB -> LINKING_VERB

//<linking verb> = "am" |"are" |"is" | "was"| "were" | "look" | "looks" |
// "looked" | "become" | "became" | "become" | ...
// Also known as copulae; in Dutch called koppelwerkwoorden
LINKING_VERB -> AM
LINKING_VERB -> ARE
LINKING_VERB -> IS
LINKING_VERB -> WAS
LINKING_VERB -> LOOK
LINKING_VERB -> LOOKS
LINKING_VERB -> LOOKED
LINKING_VERB -> BECOME
LINKING_VERB -> BECAME

//<verb phrase> = ("had" |"have" |"has") ["not"] <Vpastp>
VERB_PHRASE -> HAD VBN
VERB_PHRASE -> HAVE VBN
VERB_PHRASE -> HAS VBN
VERB_PHRASE -> HAD NOT VBN
VERB_PHRASE -> HAVE NOT VBN
VERB_PHRASE -> HAS NOT VBN

//<verb phrase> = ("had" |"have" |"has") ["not"] "been" [<Vpastp> | <Ving>]
VERB_PHRASE -> HAD BEEN VBN
VERB_PHRASE -> HAVE BEEN VBN
VERB_PHRASE -> HAS BEEN VBN
VERB_PHRASE -> HAD NOT BEEN VBN
VERB_PHRASE -> HAVE NOT BEEN VBN
VERB_PHRASE -> HAS NOT BEEN VBN
VERB_PHRASE -> HAD BEEN VBG
VERB_PHRASE -> HAVE BEEN VBG
VERB_PHRASE -> HAS BEEN VBG
VERB_PHRASE -> HAD NOT BEEN VBG
VERB_PHRASE -> HAVE NOT BEEN VBG
VERB_PHRASE -> HAS NOT BEEN VBG

//<verb phrase> = <auxV> ["not"] "have" <Vpastp>
VERB_PHRASE -> AUX_VERB HAVE VBN
VERB_PHRASE -> AUX_VERB NOT HAVE VBN

//<verb phrase> = <auxV> ["not"] "have" "been" [<Vpastp> | <Ving>]
VERB_PHRASE -> AUX_VERB HAVE BEEN VBN
VERB_PHRASE -> AUX_VERB not HAVE BEEN VBN
VERB_PHRASE -> AUX_VERB HAVE BEEN VBG
VERB_PHRASE -> AUX_VERB not HAVE BEEN VBG

//<verb phrase> = <auxV> ["not"] "be" [<Vpastp> | <Ving>]
VERB_PHRASE -> AUX_VERB BE VBN
VERB_PHRASE -> AUX_VERB NOT BE VBN
VERB_PHRASE -> AUX_VERB BE VBG
VERB_PHRASE -> AUX_VERB NOT BE VBG

//<verb phrase> = <auxV> ["not"] <Vinf>
VERB_PHRASE -> AUX_VERB VB
VERB_PHRASE -> AUX_VERB NOT VB

// <auxV> = "must" | "may" |"might" | "will" |"would" |"shall" |
//       "should" |"can" |"could"
AUX_VERB -> MUST
AUX_VERB -> MAY
AUX_VERB -> MIGHT
AUX_VERB -> WILL
AUX_VERB -> WOULD
AUX_VERB -> SHALL
AUX_VERB -> SHOULD
AUX_VERB -> CAN
AUX_VERB -> COULD

//<verb phrase> = "ought" ("to" | "not") <Vinf>
VERB_PHRASE -> OUGHT TO VB
VERB_PHRASE -> OUGHT NOT VB

//<verb phrase> = "ought" ("to" | "not") "be" [<Vpastp> | <Ving>]
VERB_PHRASE -> OUGHT TO BE VBN
VERB_PHRASE -> OUGHT NOT BE VBN
VERB_PHRASE -> OUGHT TO BE VBG
VERB_PHRASE -> OUGHT NOT BE VBG
VERB_PHRASE -> OUGHT TO BE
VERB_PHRASE -> OUGHT NOT BE

//<verb phrase> = "ought" ("to" | "not") "have" <Vpastp>
VERB_PHRASE -> OUGHT TO HAVE VBN
VERB_PHRASE -> OUGHT NOT HAVE VBN

//<verb phrase> = "ought" ("to" | "not") "have" "been" [<Vpastp> | <Ving>]
VERB_PHRASE -> OUGHT TO HAVE BEEN VBN
VERB_PHRASE -> OUGHT NOT HAVE BEEN VBN
VERB_PHRASE -> OUGHT TO HAVE BEEN VBG
VERB_PHRASE -> OUGHT NOT HAVE BEEN VBG
VERB_PHRASE -> OUGHT TO HAVE BEEN
VERB_PHRASE -> OUGHT NOT HAVE BEEN

//<verb phrase> = ("do" |"does" |"did") ["not"] [<Vinf>]
VERB_PHRASE -> DO VB
VERB_PHRASE -> DOES VB
VERB_PHRASE -> DID VB
VERB_PHRASE -> DO NOT VB
VERB_PHRASE -> DOES NOT VB
VERB_PHRASE -> DID NOT VB

//<verb phrase> = ("am" |"are" |"is" |"was" |"were") ["not"] [<Vpastp> | <Ving>]
VERB_PHRASE -> AM VBN
VERB_PHRASE -> ARE VBN
VERB_PHRASE -> IS VBN
VERB_PHRASE -> WAS VBN
VERB_PHRASE -> WERE VBN
VERB_PHRASE -> AM VBG
VERB_PHRASE -> ARE VBG
VERB_PHRASE -> IS VBG
VERB_PHRASE -> WAS VBG
VERB_PHRASE -> WERE VBG
VERB_PHRASE -> AM NOT VBN
VERB_PHRASE -> ARE NOT VBN
VERB_PHRASE -> IS NOT VBN
VERB_PHRASE -> WAS NOT VBN
VERB_PHRASE -> WERE NOT VBN
VERB_PHRASE -> AM NOT VBG
VERB_PHRASE -> ARE NOT VBG
VERB_PHRASE -> IS NOT VBG
VERB_PHRASE -> WAS NOT VBG
VERB_PHRASE -> WERE NOT VBG

//<verb phrase> = ("am" |"are" |"is" |"was" |"were") ["not"] "being" [<Vpastp>]
VERB_PHRASE -> AM BEING VBN
VERB_PHRASE -> ARE BEING VBN
VERB_PHRASE -> IS BEING VBN
VERB_PHRASE -> WAS BEING VBN
VERB_PHRASE -> WERE BEING VBN
VERB_PHRASE -> AM BEING VBG
VERB_PHRASE -> ARE BEING VBG
VERB_PHRASE -> IS BEING VBG
VERB_PHRASE -> WAS BEING VBG
VERB_PHRASE -> WERE BEING VBG
VERB_PHRASE -> AM BEING NOT VBN
VERB_PHRASE -> ARE BEING NOT VBN
VERB_PHRASE -> IS BEING NOT VBN
VERB_PHRASE -> WAS BEING NOT VBN
VERB_PHRASE -> WERE BEING NOT VBN
VERB_PHRASE -> AM BEING NOT VBG
VERB_PHRASE -> ARE BEING NOT VBG
VERB_PHRASE -> IS BEING NOT VBG
VERB_PHRASE -> WAS BEING NOT VBG
VERB_PHRASE -> WERE BEING NOT VBG

//<verb phrase> = ("am" |"are" |"is" |"was" |"were") ["not"] "going" "to" [<Vinf>]
VERB_PHRASE -> AM GOING TO VB
VERB_PHRASE -> ARE GOING TO VB
VERB_PHRASE -> IS GOING TO VB
VERB_PHRASE -> WAS GOING TO VB
VERB_PHRASE -> WERE GOING TO VB
VERB_PHRASE -> AM GOING TO VB
VERB_PHRASE -> ARE GOING TO VB
VERB_PHRASE -> IS GOING TO VB
VERB_PHRASE -> WAS GOING TO VB
VERB_PHRASE -> WERE GOING TO VB
VERB_PHRASE -> AM NOT GOING TO VB
VERB_PHRASE -> ARE NOT GOING TO VB
VERB_PHRASE -> IS NOT GOING TO VB
VERB_PHRASE -> WAS NOT GOING TO VB
VERB_PHRASE -> WERE NOT GOING TO VB
VERB_PHRASE -> AM NOT GOING TO VB
VERB_PHRASE -> ARE NOT GOING TO VB
VERB_PHRASE -> IS NOT GOING TO VB
VERB_PHRASE -> WAS NOT GOING TO VB
VERB_PHRASE -> WERE NOT GOING TO VB